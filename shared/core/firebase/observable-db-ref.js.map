{"version":3,"file":"observable-db-ref.js","sourceRoot":"","sources":["observable-db-ref.ts"],"names":[],"mappings":";;AAAA,wCAA6C;AAG7C;IAIE,yBAAa,GAAQ;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAED,qCAAW,GAAX,UAAY,KAAa;QACvB,MAAM,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,sCAAY,GAAZ,UAAa,KAAa;QACxB,MAAM,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,sCAAY,GAAZ,UAAa,KAAU;QACrB,MAAM,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,iCAAO,GAAP,UAAQ,KAAU,EAAE,GAAS;QAC3B,MAAM,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,+BAAK,GAAL,UAAM,KAAU,EAAE,GAAS;QACzB,MAAM,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,8BAAI,GAAJ,UAAK,SAAiB;QACpB,MAAM,CAAC,iBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,mCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,6BAAG,GAAH,UAAI,IAAS;QACX,MAAM,CAAC,iBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,gCAAM,GAAN,UAAO,IAAS;QACd,MAAM,CAAC,iBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,oCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAChC,CAAC;IAED,sCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;IAClC,CAAC;IAED,+BAAK,GAAL;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAED,4BAAE,GAAF,UAAG,SAAiB;QAApB,iBAGC;QAFC,MAAM,CAAC,iBAAU,CAAC,gBAAgB,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,EAA/B,CAA+B,EAC1C,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,EAAhC,CAAgC,CAAC,CAAC;IAClF,CAAC;IACH,sBAAC;AAAD,CAAC,AA5DD,IA4DC;AA5DY,0CAAe","sourcesContent":["import { Observable } from '@reactivex/rxjs';\nimport * as firebase from 'firebase';\n\nexport class ObservableDbRef {\n\n  ref: any;\n\n  constructor (ref: any) {\n    this.ref = ref;\n  }\n\n  limitToLast(limit: number) {\n    return new ObservableDbRef(this.ref.limitToLast(limit));\n  }\n\n  limitToFirst(limit: number) {\n    return new ObservableDbRef(this.ref.limitToFirst(limit));\n  }\n\n  orderByChild(value: any) {\n    return new ObservableDbRef(this.ref.orderByChild(value));\n  }\n\n  startAt(value: any, key?: any) {\n    return new ObservableDbRef(this.ref.startAt(value, key));\n  }\n\n  endAt(value: any, key?: any) {\n    return new ObservableDbRef(this.ref.endAt(value, key));\n  }\n\n  once(eventType: string): Observable<firebase.database.DataSnapshot> {\n    return Observable.fromPromise(this.ref.once(eventType));\n  }\n\n  onceValue(): Observable<firebase.database.DataSnapshot> {\n    return this.once('value');\n  }\n\n  set(data: any): Observable<firebase.database.DataSnapshot> {\n    return Observable.fromPromise(this.ref.set(data));\n  }\n\n  update(data: any): Observable<firebase.database.DataSnapshot> {\n    return Observable.fromPromise(this.ref.update(data));\n  }\n\n  childAdded(): Observable<firebase.database.DataSnapshot> {\n    return this.on('child_added');\n  }\n\n  childChanged(): Observable<firebase.database.DataSnapshot> {\n    return this.on('child_changed');\n  }\n\n  value(): Observable<firebase.database.DataSnapshot> {\n    return this.on('value');\n  }\n\n  on(eventName: string): Observable<firebase.database.DataSnapshot> {\n    return Observable.fromEventPattern(handler => this.ref.on(eventName, handler),\n                                       handler => this.ref.off(eventName, handler));\n  }\n}\n\n"]}