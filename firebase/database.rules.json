{
  "rules": {
    ".read": "auth.uid == 'execution-server'",
    "labs": {
      "$id": {
        "common": {
          ".validate": "newData.hasChildren(['id', 'user_id', 'name', 'description'])",
          "id": {
            ".validate": "newData.isString()"
          },
          "user_id": {
            ".validate": "newData.isString()"
          },
          "name": {
            ".validate": "newData.isString()"
          },
          "description": {
            ".validate": "newData.isString()"
          },
          "has_cached_run": {
            ".validate": "newData.isBoolean()"
          },
          "cache_hash": {
            ".validate": "newData.isString()"
          },
          "tags": {
            "$key1": {
              ".validate": "newData.isString()"
            },
            ".validate": "newData.hasChildren()"
          },
          "directory": {
            "$key2": {
              ".validate": "newData.hasChildren(['name', 'content'])",
              "name": {
                ".validate": "newData.isString()"
              },
              "content": {
                ".validate": "newData.isString()"
              },
              "$other": {
                ".validate": "false"
              }
            },
            ".validate": "newData.hasChildren()"
          },
          "$other": {
            ".validate": "false"
          },
          ".read": "true",
          ".write": "data.val() != null ? auth != null && auth.uid == data.child('user_id').val() && (auth != null && auth.uid == newData.child('user_id').val()) || auth.uid == 'execution-server' || auth.uid == 'cloud-fn-assign-server' : auth != null && auth.uid == newData.child('user_id').val()"
        }
      },
      ".indexOn": [
        "common/cache_hash"
      ]
    },
    "invocations": {
      "$id": {
        "common": {
          ".validate": "newData.hasChildren(['id', 'user_id', 'timestamp', 'type', 'data'])",
          "id": {
            ".validate": "newData.isString()"
          },
          "user_id": {
            ".validate": "newData.isString()"
          },
          "timestamp": {
            ".validate": "newData.isNumber()"
          },
          "type": {
            ".validate": "newData.isNumber()"
          },
          "data": {
            ".validate": "newData.hasChildren() && newData.hasChildren(['id']) || newData.hasChildren() && newData.hasChildren(['execution_id'])",
            "id": {
              ".validate": "newData.isString()"
            },
            "directory": {
              "$key2": {
                ".validate": "newData.hasChildren() && newData.hasChildren(['name', 'content'])",
                "name": {
                  ".validate": "newData.isString()"
                },
                "content": {
                  ".validate": "newData.isString()"
                },
                "$other": {
                  ".validate": "false"
                }
              },
              ".validate": "newData.hasChildren()"
            },
            "$other": {
              ".validate": "false"
            },
            "execution_id": {
              ".validate": "newData.isString()"
            }
          },
          "$other": {
            ".validate": "false"
          },
          ".read": "auth != null && auth.uid == data.child('user_id').val() || auth.uid == 'cloud-fn-assign-server'",
          ".write": "data.val() != null ? auth != null && auth.uid == data.child('user_id').val() && (auth != null && auth.uid == newData.child('user_id').val()) || auth.uid == 'execution-server' || auth.uid == 'cloud-fn-assign-server' : auth != null && auth.uid == newData.child('user_id').val()"
        },
        ".read": "auth.uid == 'cloud-fn-assign-server' || auth.uid == 'execution-server'",
        ".write": "auth.uid == 'cloud-fn-assign-server'"
      },
      ".indexOn": [
        "server/id"
      ]
    },
    "executions": {
      "$id": {
        "common": {
          ".validate": "newData.hasChildren(['id', 'cache_hash', 'started_at', 'server_id', 'server_info', 'user_id', 'lab', 'status'])",
          "id": {
            ".validate": "newData.isString()"
          },
          "cache_hash": {
            ".validate": "newData.isString()"
          },
          "started_at": {
            ".validate": "newData.isNumber()"
          },
          "finished_at": {
            ".validate": "newData.isNumber()"
          },
          "server_id": {
            ".validate": "newData.isString()"
          },
          "server_info": {
            ".validate": "newData.isString()"
          },
          "user_id": {
            ".validate": "newData.isString()"
          },
          "lab": {
            ".validate": "newData.hasChildren(['id'])",
            "id": {
              ".validate": "newData.isString()"
            },
            "directory": {
              "$key2": {
                ".validate": "newData.hasChildren(['name', 'content'])",
                "name": {
                  ".validate": "newData.isString()"
                },
                "content": {
                  ".validate": "newData.isString()"
                },
                "$other": {
                  ".validate": "false"
                }
              },
              ".validate": "newData.hasChildren()"
            },
            "$other": {
              ".validate": "false"
            }
          },
          "status": {
            ".validate": "newData.isNumber()"
          },
          "$other": {
            ".validate": "false"
          },
          ".read": "true",
          ".write": "auth.uid == 'execution-server'"
        },
        "messages": {
          ".read": "true",
          ".write": "auth.uid == 'execution-server'",
          ".indexOn": [
            "index"
          ],
          "$mid": {
            ".validate": "newData.hasChildren(['id', 'index', 'timestamp', 'data', 'kind'])",
            "id": {
              ".validate": "newData.isString()"
            },
            "index": {
              ".validate": "newData.isNumber()"
            },
            "timestamp": {
              ".validate": "newData.isNumber()"
            },
            "data": {
              ".validate": "true"
            },
            "kind": {
              ".validate": "newData.isNumber()"
            },
            "$other": {
              ".validate": "false"
            },
            ".read": "true",
            ".write": "auth.uid == 'execution-server'"
          }
        }
      },
      ".indexOn": [
        "common/cache_hash"
      ]
    },
    "users": {
      "$id": {
        "common": {
          ".validate": "newData.hasChildren(['id', 'isAnonymous', 'displayName', 'bio', 'photoUrl', 'email'])",
          "id": {
            ".validate": "newData.isString() && newData.val() == auth.uid"
          },
          "isAnonymous": {
            ".validate": "newData.isBoolean() && newData.val() == (auth.provider == 'anonymous')"
          },
          "displayName": {
            ".validate": "newData.isString()"
          },
          "bio": {
            ".validate": "newData.isString()"
          },
          "photoUrl": {
            ".validate": "newData.isString()"
          },
          "email": {
            ".validate": "newData.isString() && newData.val() == auth.email"
          },
          "$other": {
            ".validate": "false"
          },
          ".read": "true",
          ".write": "data.val() != null ? auth != null && auth.uid == data.child('id').val() && (auth != null && auth.uid == newData.child('id').val()) : auth != null && auth.uid == newData.child('id').val()"
        },
        "plan": {
          ".read": "true"
        }
      }
    },
    "servers": {
      ".read": "auth.uid == 'execution-server' || auth.uid == 'cloud-fn-assign-server'",
      "$id": {
        ".validate": "newData.hasChildren(['id', 'hardware_type', 'name'])",
        "id": {
          ".validate": "newData.isString()"
        },
        "hardware_type": {
          ".validate": "newData.isString()"
        },
        "name": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        }
      }
    },
    "user_labs": {
      "$id": {
        ".read": "true"
      }
    },
    "lab_executions": {
      "$id": {
        ".read": "true"
      }
    }
  }
}
